// <auto-generated />
using System;
using APBDTEST2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBDTEST2.Migrations
{
    [DbContext(typeof(s21901Context))]
    partial class s21901ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("APBDTEST2.Models.CityDict", b =>
                {
                    b.Property<int>("IdCityDict")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCityDict"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCityDict");

                    b.ToTable("CityDict");

                    b.HasData(
                        new
                        {
                            IdCityDict = 1,
                            City = "mumbai"
                        });
                });

            modelBuilder.Entity("APBDTEST2.Models.Flight", b =>
                {
                    b.Property<int>("IdFlight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFlight"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCityDict")
                        .HasColumnType("int");

                    b.Property<int>("IdPlane")
                        .HasColumnType("int");

                    b.HasKey("IdFlight");

                    b.HasIndex("IdCityDict");

                    b.HasIndex("IdPlane");

                    b.ToTable("Flight");

                    b.HasData(
                        new
                        {
                            IdFlight = 1,
                            Comments = "yo",
                            FlightDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCityDict = 1,
                            IdPlane = 1
                        });
                });

            modelBuilder.Entity("APBDTEST2.Models.Flight_Passenger", b =>
                {
                    b.Property<int>("IdFlight")
                        .HasColumnType("int");

                    b.Property<int>("IdPassenger")
                        .HasColumnType("int");

                    b.HasKey("IdFlight", "IdPassenger");

                    b.HasIndex("IdPassenger");

                    b.ToTable("Flight_Passenger");

                    b.HasData(
                        new
                        {
                            IdFlight = 1,
                            IdPassenger = 1
                        });
                });

            modelBuilder.Entity("APBDTEST2.Models.Passenger", b =>
                {
                    b.Property<int>("IdPassenger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPassenger"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PassportNum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdPassenger");

                    b.ToTable("Passenger");

                    b.HasData(
                        new
                        {
                            IdPassenger = 1,
                            FirstName = "harsh",
                            LastName = "patel",
                            PassportNum = "124"
                        });
                });

            modelBuilder.Entity("APBDTEST2.Models.Plane", b =>
                {
                    b.Property<int>("IdPlane")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlane"), 1L, 1);

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPlane");

                    b.ToTable("Plane");

                    b.HasData(
                        new
                        {
                            IdPlane = 1,
                            MaxSeats = 30,
                            Name = "harsh"
                        });
                });

            modelBuilder.Entity("APBDTEST2.Models.Flight", b =>
                {
                    b.HasOne("APBDTEST2.Models.CityDict", "CityDict")
                        .WithMany("flights")
                        .HasForeignKey("IdCityDict")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDTEST2.Models.Plane", "Plane")
                        .WithMany("flights")
                        .HasForeignKey("IdPlane")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityDict");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("APBDTEST2.Models.Flight_Passenger", b =>
                {
                    b.HasOne("APBDTEST2.Models.Flight", "Flight")
                        .WithMany("flight_Passengers")
                        .HasForeignKey("IdFlight")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDTEST2.Models.Passenger", "Passenger")
                        .WithMany("flight_Passengers")
                        .HasForeignKey("IdPassenger")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("APBDTEST2.Models.CityDict", b =>
                {
                    b.Navigation("flights");
                });

            modelBuilder.Entity("APBDTEST2.Models.Flight", b =>
                {
                    b.Navigation("flight_Passengers");
                });

            modelBuilder.Entity("APBDTEST2.Models.Passenger", b =>
                {
                    b.Navigation("flight_Passengers");
                });

            modelBuilder.Entity("APBDTEST2.Models.Plane", b =>
                {
                    b.Navigation("flights");
                });
#pragma warning restore 612, 618
        }
    }
}
